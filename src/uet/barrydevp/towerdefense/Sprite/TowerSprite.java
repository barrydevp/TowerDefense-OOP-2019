package uet.barrydevp.towerdefense.Sprite;import javafx.geometry.Point2D;import javafx.scene.image.Image;import javafx.scene.image.ImageView;import javafx.scene.input.MouseEvent;import javafx.scene.paint.Color;import javafx.scene.shape.Circle;import uet.barrydevp.towerdefense.Game.GameManager;import uet.barrydevp.towerdefense.Game.GameSpriteManager;import uet.barrydevp.towerdefense.Tower.BaseTower;import java.util.ArrayList;import java.util.HashMap;public class TowerSprite extends BaseSprite {    private BaseTower tower;    private ImageView upgrade = new ImageView(GameSpriteManager.getInstance().upgradeImage);    private ImageView sell = new ImageView(GameSpriteManager.getInstance().sellImage);    private boolean isVisibleButton;    private Image image;    private ImageView imageView;    private Circle scopeCircle;    public TowerSprite(Image image, HashMap<String, BaseSprite> childrenSprite, Point2D centerLocation, double r, BaseTower tower) {        this.tower = tower;        init();        this.childrenSprite = childrenSprite;        this.image = image;        this.centerLocation = centerLocation;        this.originalR = r;        this.r = r;        this.width = image.getWidth(); // imageView.getBoundsInParent().getWidth();        this.height = image.getHeight(); // imageView.getBoundsInParent().getHeight();        this.imageView = new ImageView(this.image);        imageView.addEventFilter(MouseEvent.MOUSE_CLICKED, e -> {            isVisibleButton = !isVisibleButton;            changeVisible();        });        getChildren().add(imageView);        if(childrenSprite != null) {            GameManager.getInstance().getEffectLayer().getChildren().addAll(childrenSprite.values());        }//        relocate(centerLocation.getX() - width / 2, centerLocation.getY() - height / 2);        setTranslateX(centerLocation.getX() - width / 2);        setTranslateY(centerLocation.getY() - height / 2);//        setRotate(r);    }    public void init() {        isVisibleButton = false;        upgrade = new ImageView(GameSpriteManager.getInstance().upgradeImage);        upgrade.setFitWidth(40);        upgrade.setFitHeight(40);        upgrade.setVisible(isVisibleButton);        upgrade.setTranslateX(-10);        upgrade.setTranslateY(-40);        upgrade.addEventFilter(MouseEvent.MOUSE_CLICKED, e -> {            tower.upgradeTower();        });//        upgrade.relocate(0, -40);        sell = new ImageView(GameSpriteManager.getInstance().sellImage);        sell.setFitWidth(40);        sell.setFitHeight(40);//        sell.relocate(40, -40);        sell.setTranslateX(40);        sell.setTranslateY(-40);        sell.setVisible(isVisibleButton);        sell.addEventFilter(MouseEvent.MOUSE_CLICKED, e -> {            tower.sellTower();        });        getChildren().add(upgrade);        getChildren().add(sell);    }    public void setScopeCircle(double scope) {        scopeCircle = new Circle();//        scopeCircle.setCenterX(width / 2);//        scopeCircle.setCenterY(height / 2);        scopeCircle.setCenterX(getCenterLocation().getX());        scopeCircle.setCenterY(getCenterLocation().getY());        scopeCircle.setRadius(scope);        scopeCircle.setStroke(Color.BLUE);        scopeCircle.setFill(Color.TRANSPARENT);        scopeCircle.setVisible(false);//        getChildren().add(1, scopeCircle);        GameManager.getInstance().getEffectLayer().getChildren().add(scopeCircle);    }    public void removeScope() {        GameManager.getInstance().getEffectLayer().getChildren().remove(scopeCircle);    }//    public void updateUI() {//        relocate(centerLocation.getX() - width / 2, centerLocation.getY() - height / 2);////        imageView.setRotate(r);//    }    public void buildTower(BaseTower tower) {        GameManager instance = GameManager.getInstance();        System.out.println(instance.getMoney());        System.out.println(tower.getBuildMoney());        int tmpMoney = instance.getMoney() - tower.getBuildMoney();        if(tmpMoney >= 0) {            instance.setMoney(tmpMoney);            instance.getTowerArray().add(tower);            changeVisible();        } else {            tower.removeTower();            System.out.println("Haven't enought gold to build this Tower!");        }    }    public void changeVisible() {        upgrade.setVisible(isVisibleButton);        sell.setVisible(isVisibleButton);        scopeCircle.setVisible(isVisibleButton);    }}