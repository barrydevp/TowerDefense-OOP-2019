package uet.barrydevp.towerdefense.Sprite;import javafx.scene.layout.Pane;import javafx.geometry.Point2D;import java.util.ArrayList;import java.util.HashMap;public abstract class BaseSprite extends Pane {    protected HashMap<String, BaseSprite> childrenSprite;    protected Point2D centerLocation;    protected double originalR;    protected double r;    protected double width;    protected double height;    public HashMap<String, BaseSprite> getChildrenSprite() {        return childrenSprite;    }    public void setChildrenSprite(HashMap<String, BaseSprite> childrenSprite) {        this.childrenSprite = childrenSprite;        if(childrenSprite != null) {//            System.out.println(childrenSprite);            getChildren().addAll(0, childrenSprite.values());        }    }    public Point2D getCenterLocation() {        return centerLocation;    }    public void setCenterLocation(Point2D centerLocation) {        this.centerLocation = centerLocation;    }    public double getR() {        return r;    }    public void setR(double r) {        this.r = r + originalR;    }    public void updateUI() {//        relocate(centerLocation.getX() - width / 2, centerLocation.getY() - height / 2);        setTranslateX(centerLocation.getX() - width / 2);        setTranslateY(centerLocation.getY() - height / 2);//        if(childrenSprite != null) {////        }        setRotate(r);    }    public void update(Point2D centerLocation, double dr) {        this.r = this.originalR + dr;        this.centerLocation = centerLocation;        this.updateUI();    }    public void setVisibleChild(String key, boolean isVisible) {//        System.out.println(childrenSprite.get(key));        if(childrenSprite != null && childrenSprite.get(key) != null) {            childrenSprite.get(key).setVisible(isVisible);//            System.out.println(childrenSprite.get(index).isVisible());        }    }    public double getSpriteWidth() {        return width;    }    public double getSpriteHeight() {        return height;    }}