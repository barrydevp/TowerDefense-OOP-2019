package uet.barrydevp.towerdefense.Bullet;import javafx.geometry.Point2D;import uet.barrydevp.towerdefense.Game.GameManager;import uet.barrydevp.towerdefense.Game.GameSpriteManager;import uet.barrydevp.towerdefense.Monster.BaseMonster;import uet.barrydevp.towerdefense.Sprite;import java.util.ArrayList;public class BigRocket extends BaseBullet {    @Override    public boolean init() {        setBulletName(BulletName.BigRocket);        return true;    }    public static BigRocket createBullet(BaseMonster targetMonster, Point2D startPoint) {        BigRocket bullet = new BigRocket();        if(bullet.init()) {            bullet.setBaseSprite(new Sprite(                    GameManager.getInstance().getBulletLayer(),                    GameSpriteManager.getInstance().bigRocketImage,                    startPoint, 90)            );            bullet.setTargetMonster(targetMonster);            bullet.setMoveSpeed(90);            bullet.setAcceleration(40);            bullet.setMaxForce(500);            bullet.setScope(10);        }        return bullet;    }    @Override    public void fire() {        BaseMonster targetMonster = getTargetMonster();        double distance = getBaseSprite().getCenterLocation().distance(targetMonster.getBaseSprite().getCenterLocation());        if(distance < getScope()) {            ArrayList<BaseMonster> monsterArray = GameManager.getInstance().getMonsterArray();            for(int i = 0; i < monsterArray.size(); ++i) {                BaseMonster monster = monsterArray.get(i);                double tmpDistance = getBaseSprite().getCenterLocation().distance(monsterArray.get(i).getBaseSprite().getCenterLocation());                if(tmpDistance < getScope()) {                    int monsterHp = monster.getCurHp() - getMaxForce();                    if (monsterHp <= 0) {                        monster.setCurHp(0);                        monster.death();                    } else {                        monster.setCurHp(monsterHp);                        monster.getHurt();                    }                    monster.setHpPercentage(monsterHp * 1.0 / monster.getMaxHp());                }            }            removeBullet();        }    }}