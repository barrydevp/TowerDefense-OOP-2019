package uet.barrydevp.towerdefense;import javafx.scene.image.Image;import javafx.scene.image.ImageView;import javafx.scene.layout.Pane;import javafx.geometry.Point2D;public class Sprite {    private Image image;    private ImageView imageView;    private Pane layer;    private Point2D centerLocation;    private Point2D drawLocation;    private final double originalR;    private double r;    private double width;    private double height;    public Sprite(Pane layer, Image image, Point2D centerLocation, double r) {//        System.out.println(centerLocation);        this.layer = layer;        this.image = image;        this.centerLocation = centerLocation;        this.originalR = r;        this.r = r;        this.width = image.getWidth(); // imageView.getBoundsInParent().getWidth();        this.height = image.getHeight(); // imageView.getBoundsInParent().getHeight();        this.drawLocation = new Point2D(centerLocation.getX() - width / 2, centerLocation.getY() - height / 2);        this.imageView = new ImageView(image);        this.imageView.relocate(drawLocation.getX(), drawLocation.getY());        this.imageView.setRotate(r);        addToLayer();    }    public void addToLayer() {        layer.getChildren().add(imageView);    }    public void removeFromLayer() {        layer.getChildren().remove(imageView);    }    public Pane getLayer() {        return layer;    }    public void setLayer(Pane layer) {        this.layer = layer;    }    public Point2D getCenterLocation() {        return centerLocation;    }    public void setCenterLocation(Point2D centerLocation) {        this.centerLocation = centerLocation;        this.drawLocation = new Point2D(centerLocation.getX() - width / 2, centerLocation.getY() - height / 2);    }    public Point2D getDrawLocation() {        return drawLocation;    }    public void setDrawLocation(Point2D drawLocation) {        this.drawLocation = drawLocation;        this.centerLocation = new Point2D(drawLocation.getX() - width / 2, drawLocation.getY() - height / 2);    }    public double getR() {        return r;    }    public void setR(double r) {        this.r = r + originalR;    }    public ImageView getImageView() {        return imageView;    }    public void updateUI() {//        System.out.println("Update UI: " + drawLocation.getX());        imageView.relocate(drawLocation.getX(), drawLocation.getY());        imageView.setRotate(r);    }    public double getWidth() {        return width;    }    public double getHeight() {        return height;    }}